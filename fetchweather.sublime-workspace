{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"b",
				"background-color"
			],
			[
				"back",
				"background-color"
			],
			[
				"bac",
				"background-color"
			],
			[
				"box",
				"box-shadow"
			],
			[
				"besch",
				"Ballerinaschuhs"
			],
			[
				"Zig",
				"Zigarette"
			],
			[
				"m_",
				"m_config"
			],
			[
				"the",
				"theme_default"
			],
			[
				"no",
				"no_sidebar"
			],
			[
				"font-",
				"font-family"
			],
			[
				"max",
				"max-height"
			],
			[
				"over",
				"overflow-y"
			],
			[
				"ca",
				"category"
			],
			[
				"in",
				"inline"
			],
			[
				"f",
				"false"
			],
			[
				"bord",
				"border-radius"
			],
			[
				"cli",
				"clickable"
			],
			[
				"get",
				"getSelection"
			],
			[
				"r",
				"registers"
			],
			[
				"fina",
				"final_url"
			],
			[
				"fin",
				"final_url"
			],
			[
				"text",
				"text-overflow"
			],
			[
				"text-o",
				"text-overflow"
			],
			[
				"max-",
				"max-height"
			],
			[
				"ch",
				"child"
			],
			[
				"padd",
				"padding-top"
			],
			[
				"box-",
				"box-shadow"
			],
			[
				"fi",
				"first-child"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/DataHandler_ImplOWM.cpp",
			"settings":
			{
				"buffer_size": 11116,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "src/DataHandler_ImplVC.cpp",
			"settings":
			{
				"buffer_size": 1407,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/DataHandler_ImplClimaCell.cpp",
			"settings":
			{
				"buffer_size": 15912,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					32,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA8SIAAAAAAADxIgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/data/mnt/shared/data/code/fetchweather/src/DataHandler_ImplClimaCell.cpp",
			"settings":
			{
				"buffer_size": 15912,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"paste",
					null,
					"AQAAAJwhAAAAAAAABSIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnCEAAAAAAACcIQAAAAAAAAAAAAAAAAAA"
				],
				[
					21,
					4,
					"right_delete",
					null,
					"BAAAAJwhAAAAAAAAnCEAAAAAAAABAAAAIJwhAAAAAAAAnCEAAAAAAAABAAAAIJwhAAAAAAAAnCEAAAAAAAABAAAAIJwhAAAAAAAAnCEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAnCEAAAAAAACcIQAAAAAAAAAAAAAAAAAA"
				],
				[
					23,
					20,
					"right_delete",
					null,
					"FAAAAK8hAAAAAAAAryEAAAAAAAABAAAACq8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIK8hAAAAAAAAryEAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAryEAAAAAAACvIQAAAAAAAP///////+9/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " \""
					},
					"AgAAAK8hAAAAAAAAsCEAAAAAAAAAAAAAsCEAAAAAAACxIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAryEAAAAAAACvIQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "Imüö"
					},
					"BAAAALEhAAAAAAAAsiEAAAAAAAAAAAAAsiEAAAAAAACzIQAAAAAAAAAAAACzIQAAAAAAALQhAAAAAAAAAAAAALQhAAAAAAAAtSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsSEAAAAAAACxIQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					2,
					"left_delete",
					null,
					"AgAAALQhAAAAAAAAtCEAAAAAAAACAAAAw7azIQAAAAAAALMhAAAAAAAAAgAAAMO8",
					"AQAAAAAAAAABAAAAtSEAAAAAAAC1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "plCC"
					},
					"BAAAALMhAAAAAAAAtCEAAAAAAAAAAAAAtCEAAAAAAAC1IQAAAAAAAAAAAAC1IQAAAAAAALYhAAAAAAAAAAAAALYhAAAAAAAAtyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsyEAAAAAAACzIQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					6,
					"left_delete",
					null,
					"BgAAALYhAAAAAAAAtiEAAAAAAAABAAAAQ7UhAAAAAAAAtSEAAAAAAAABAAAAQ7QhAAAAAAAAtCEAAAAAAAABAAAAbLMhAAAAAAAAsyEAAAAAAAABAAAAcLIhAAAAAAAAsiEAAAAAAAABAAAAbbEhAAAAAAAAsSEAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAtyEAAAAAAAC3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "CC:"
					},
					"AwAAALEhAAAAAAAAsiEAAAAAAAAAAAAAsiEAAAAAAACzIQAAAAAAAAAAAACzIQAAAAAAALQhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsSEAAAAAAACxIQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					7,
					"right_delete",
					null,
					"BwAAAMMhAAAAAAAAwyEAAAAAAAABAAAARsMhAAAAAAAAwyEAAAAAAAABAAAAYcMhAAAAAAAAwyEAAAAAAAABAAAAacMhAAAAAAAAwyEAAAAAAAABAAAAbMMhAAAAAAAAwyEAAAAAAAABAAAAdcMhAAAAAAAAwyEAAAAAAAABAAAAcsMhAAAAAAAAwyEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAwyEAAAAAAADDIQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"right_delete",
					null,
					"AQAAAMMhAAAAAAAAwyEAAAAAAAAnAAAALCBlcnJvciBjb2RlID0gJWQsIGVycm9yIG1lc3NhZ2UgPSAlcyIs",
					"AQAAAAAAAAABAAAAwyEAAAAAAADqIQAAAAAAAP///////+9/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "ra"
					},
					"AgAAAMMhAAAAAAAAxCEAAAAAAAAAAAAAxCEAAAAAAADFIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwyEAAAAAAADDIQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAAMQhAAAAAAAAxCEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAxSEAAAAAAADFIQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "ead"
					},
					"AwAAAMQhAAAAAAAAxSEAAAAAAAAAAAAAxSEAAAAAAADGIQAAAAAAAAAAAADGIQAAAAAAAMchAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxCEAAAAAAADEIQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " successful"
					},
					"CwAAAMchAAAAAAAAyCEAAAAAAAAAAAAAyCEAAAAAAADJIQAAAAAAAAAAAADJIQAAAAAAAMohAAAAAAAAAAAAAMohAAAAAAAAyyEAAAAAAAAAAAAAyyEAAAAAAADMIQAAAAAAAAAAAADMIQAAAAAAAM0hAAAAAAAAAAAAAM0hAAAAAAAAziEAAAAAAAAAAAAAziEAAAAAAADPIQAAAAAAAAAAAADPIQAAAAAAANAhAAAAAAAAAAAAANAhAAAAAAAA0SEAAAAAAAAAAAAA0SEAAAAAAADSIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxyEAAAAAAADHIQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANIhAAAAAAAA0yEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0iEAAAAAAADSIQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"left_delete",
					null,
					"AQAAANIhAAAAAAAA0iEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0yEAAAAAAADTIQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANIhAAAAAAAA0yEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0iEAAAAAAADSIQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " populating"
					},
					"CwAAANMhAAAAAAAA1CEAAAAAAAAAAAAA1CEAAAAAAADVIQAAAAAAAAAAAADVIQAAAAAAANYhAAAAAAAAAAAAANYhAAAAAAAA1yEAAAAAAAAAAAAA1yEAAAAAAADYIQAAAAAAAAAAAADYIQAAAAAAANkhAAAAAAAAAAAAANkhAAAAAAAA2iEAAAAAAAAAAAAA2iEAAAAAAADbIQAAAAAAAAAAAADbIQAAAAAAANwhAAAAAAAAAAAAANwhAAAAAAAA3SEAAAAAAAAAAAAA3SEAAAAAAADeIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0yEAAAAAAADTIQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " snap"
					},
					"BQAAAN4hAAAAAAAA3yEAAAAAAAAAAAAA3yEAAAAAAADgIQAAAAAAAAAAAADgIQAAAAAAAOEhAAAAAAAAAAAAAOEhAAAAAAAA4iEAAAAAAAAAAAAA4iEAAAAAAADjIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3iEAAAAAAADeIQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOMhAAAAAAAA5CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4yEAAAAAAADjIQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAAOMhAAAAAAAA4yEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5CEAAAAAAADkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "shot\")"
					},
					"BgAAAOMhAAAAAAAA5CEAAAAAAAAAAAAA5CEAAAAAAADlIQAAAAAAAAAAAADlIQAAAAAAAOYhAAAAAAAAAAAAAOYhAAAAAAAA5yEAAAAAAAAAAAAA5yEAAAAAAADoIQAAAAAAAAAAAADoIQAAAAAAAOkhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4yEAAAAAAADjIQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOkhAAAAAAAA6iEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6SEAAAAAAADpIQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/utils.cpp",
			"settings":
			{
				"buffer_size": 4464,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/options.h",
			"settings":
			{
				"buffer_size": 4024,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "/*\n * MIT License\n *\n * Copyright (c) 2021 Alex Vie (silvercircle@gmail.com)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n#include \"utils.h\"\n\nDataHandler::DataHandler() : m_options{ProgramOptions::getInstance()},\n                             m_DataPoint { .valid = false }\n{\n    const CFG& cfg = m_options.getConfig();\n\n    this->db_path.assign(cfg.data_dir_path);\n    this->db_path.append(\"/history.sqlite3\");\n    LOG_F(INFO, \"Database path: %s\", this->db_path.c_str());\n\n    this->m_currentCache.assign(cfg.data_dir_path);\n    this->m_currentCache.append(\"/cache/\");\n    this->m_currentCache.append(cfg.apiProviderString).append(\".\");\n\n    this->m_ForecastCache.assign(this->m_currentCache);\n    this->m_ForecastCache.append(\"forecast.json\");\n    this->m_currentCache.append(\"current.json\");\n    LOG_F(INFO, \"Current Cache: %s\", this->m_currentCache.c_str());\n    LOG_F(INFO, \"Forecast Cache: %s\", this->m_ForecastCache.c_str());\n}\n/**\n * convert a wind bearing in degrees into a human-readable form (i.e. \"SW\" for\n * a south-westerly wind).\n *\n * @param wind_direction    - wind bearing in degrees\n * @return                  - wind direction and speed unit as a std::pair\n */\nstd::pair<std::string, std::string> DataHandler::degToBearing(unsigned int wind_direction) const\n{\n    wind_direction = (wind_direction > 360) ? 0 : wind_direction;\n    size_t _val = (size_t) (((double) wind_direction / 22.5) + 0.5);\n    std::string retval;\n    retval.assign(DataHandler::wind_directions[_val % 16]);\n    return std::pair<std::string, std::string>(retval, this->m_options.getConfig().speed_unit);\n}\n\n/**\n * Convert a temperature from metric to imperial, depending on the user's preference.\n *\n * @param temp      - temperature in Celsius\n * @param unit      - destination unit (F or C are allowed)\n * @return          - temperature and its unit as a std::pair\n */\nstd::pair<double, char> DataHandler::convertTemperature(double temp, char unit) const\n{\n    double converted_temp = temp;\n    unit = (unit == 'C' || unit == 'F') ? unit : 'C';\n    if (unit == 'F') {\n        converted_temp = (temp * (9.0 / 5.0)) + 32.0;\n    }\n\n    return std::pair<double, char>(converted_temp, unit);\n}\n\ndouble DataHandler::convertVis(const double vis) const\n{\n    return this->m_options.getConfig().vis_unit == \"mi\" ? vis / 1.609 : vis;\n}\n\ndouble DataHandler::convertWindspeed(double speed) const\n{\n    const std::string& _unit = m_options.getConfig().speed_unit;\n    if(_unit == \"km/h\")\n        return speed * 3.6;\n    else if(_unit == \"mph\")\n        return speed * 2.237;\n    else if(_unit == \"kts\")\n        return speed * 1.944;\n    else\n        return speed;\n}\n\n// hPa > InHg\ndouble DataHandler::convertPressure(double hPa) const\n{\n    return m_options.getConfig().pressure_unit == \"inhg\" ? hPa / 33.863886666667 : hPa;\n}\n\n/**\n * Output a single temperature value.\n *\n * @param val       temperature always in metric (Celsius)\n * @param addUnit   add the Unit (°C or °F)\n * @param format    use this format for output. See .h for defaults.\n */\nvoid DataHandler::outputTemperature(FILE *stream, double val, const bool addUnit, const char *format)\n{\n    char unit[5] = \"\\xc2\\xB0X\";    // UTF-8!! c2b0 is the utf8 sequence for ° (degree symbol)\n    char res[129];\n\n    auto result = this->convertTemperature(val, this->m_options.getConfig().temp_unit).first;\n\n    unit[2] = this->m_options.getConfig().temp_unit;\n\n    fprintf(stream, \"%.1f%s\\n\", result, addUnit ? unit : \"\");\n}\n\n/**\n * @brief DataHandler::doOutput - generate output\n * @param stream: target stream for the ouput\n *\n * This generates all the output - it can either print to the console\n * or to a given FILE.\n */\nvoid DataHandler::doOutput(FILE* stream)\n{\n\n    const CFG& cfg = this->m_options.getConfig();\n\n    fprintf(stream, \"** Begin output **\\n\");\n\n    fprintf(stream, \"%c\\n\", m_DataPoint.weatherSymbol);\n    this->outputTemperature(stream, m_DataPoint.temperature, true);\n\n    /*\n     * The 3 days of forecast\n     */\n    this->outputDailyForecast(stream, false);\n    this->outputTemperature(stream, m_DataPoint.temperatureApparent, true);                 // 16\n    this->outputTemperature(stream, m_DataPoint.dewPoint, true);                            // 17\n    fprintf(stream, \"Humidity: %.1f\\n\", m_DataPoint.humidity);                               // 18\n    fprintf(stream, cfg.pressure_unit == \"hPa\" ? \"%.0f hPa\\n\" : \"%.2f InHg\\n\",               // 19\n           m_DataPoint.pressureSeaLevel);\n    fprintf(stream, \"%.1f %s\\n\", m_DataPoint.windSpeed, cfg.speed_unit.c_str());             // 20\n\n    if(m_DataPoint.precipitationIntensity > 0) {\n        fprintf(stream, \"%s (%.1fmm/1h)\\n\", m_DataPoint.precipitationTypeAsString,\n               m_DataPoint.precipitationIntensity);                                 // 21\n    } else {\n        fprintf(stream, \"PoP: %.0f%%\\n\", m_DataPoint.precipitationProbability);              // 21\n    }\n    fprintf(stream, \"%.1f %s\\n\", m_DataPoint.visibility, cfg.vis_unit.c_str());              // 22\n\n    fprintf(stream, \"%s\\n\", m_DataPoint.sunriseTimeAsString);                                // 23\n    fprintf(stream, \"%s\\n\", m_DataPoint.sunsetTimeAsString);                                 // 24\n\n    fprintf(stream, \"%s\\n\", m_DataPoint.windBearing);                                        // 25\n    fprintf(stream, \"%s\\n\", m_DataPoint.timeRecordedAsText);                                 // 26\n    fprintf(stream, \"%s\", m_DataPoint.conditionAsString);                                    // 27\n    if(m_DataPoint.cloudCover > 0) {\n        fprintf(stream, \" (%.0f%% cov.)\\n\", m_DataPoint.cloudCover);\n    } else {\n        fprintf(stream, \"\\n\");\n    }\n    fprintf(stream, \"%s\\n\", cfg.timezone.c_str());                                           // 28\n    outputTemperature(stream, m_DataPoint.temperatureMin, true);\t\t                    // 29\n    outputTemperature(stream, m_DataPoint.temperatureMax, true);\t\t                    // 30\n    // not all APIs provide the UV index\n    if(m_DataPoint.haveUVI) {\n        fprintf(stream, \"UV: %.1f\\n\", m_DataPoint.uvIndex);                                  // 31\n    } else {\n        fprintf(stream, \" \\n\");                                                              // 31\n    }\n    fprintf(stream, \"** end data **\\n\");                                          \t\t    // 32\n    fprintf(stream, \"%.0f (Clouds)\\n\", m_DataPoint.cloudCover);\n    fprintf(stream, \"%.0f (Cloudbase)\\n\", m_DataPoint.cloudBase);\n    fprintf(stream, \"%.0f (Cloudceil)\\n\", m_DataPoint.cloudCeiling);\n    fprintf(stream, \"%d (Moon)\\n\", m_DataPoint.moonPhase);\n}\n\n/**\n * output low/high temperature and condition \"icon\" for one day in the\n * forecast\n *\n * @param day           the JSON data for the forecast day to process\n * param  is_daylight   whether we should use the day or night weather symbol\n */\nvoid DataHandler::outputDailyForecast(FILE *stream, const bool is_day)\n\n{\n    for (int i = 0; i < 3; i++) {\n        fprintf(stream, \"%c\\n\", this->m_daily[i].code);\n        outputTemperature(stream, this->m_daily[i].temperatureMin, false, \"%.0f%s\\n\");\n        outputTemperature(stream, this->m_daily[i].temperatureMax, false, \"%.0f%s\\n\");\n        fprintf(stream, \"%s\\n\", this->m_daily[i].weekDay);\n    }\n}\n\n// TODO - this is incomplete\nvoid DataHandler::dumpSnapshot()\n{\n    DataPoint& p = this->m_DataPoint;\n\n    printf(\"Temp: %f - Feels: %f\\n\", p.temperature, p.temperatureApparent);\n    printf(\"Sunrise: %s - Sunset: %s\\n\", p.sunriseTimeAsString, p.sunsetTimeAsString);\n    printf(\"Pressure: %f - Humidity: %f\\n\", p.pressureSeaLevel, p.humidity);\n    printf(\"Code: %d, Symbol: %c, Condition: %s\\n\", p.weatherCode, p.weatherSymbol, p.conditionAsString);\n}\n\n/**\n * Write the database entry, unless database recording is disabled\n * @author alex (25.02.21)\n */\nvoid DataHandler::writeToDB()\n{\n    sqlite3         *the_db = 0;\n    sqlite3_stmt    *stmt = 0;\n    char            *err = 0;\n    DataPoint&      d = this->m_DataPoint;\n\n    if(!d.valid)\n        return;\n\n    // don't modify db in debug mode\n    if(m_options.getConfig().debug) {\n        LOG_F(INFO, \"DataHandler::writeToDB(): skipping DB recording (debug mode is on)\");\n        return;\n    }\n\n    LOG_F(INFO, \"Flushing DB, attemptint to open: %s\", this->db_path.c_str());\n    auto rc = sqlite3_open(this->db_path.c_str(), &the_db);\n    if(rc) {\n        LOG_F(INFO, \"Unable to open the SQLite Database at %s. The error message was %s.\",\n              this->db_path.c_str(), sqlite3_errmsg(the_db));\n        return;\n    }\n    LOG_F(INFO, \"Database openend successfully\");\n\n    auto sql = R\"(CREATE TABLE IF NOT EXISTS history\n      (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          timestamp INTEGER DEFAULT 0,\n          summary TEXT NOT NULL DEFAULT 'unknown',\n          icon TEXT NOT NULL DEFAULT 'unknown',\n          temperature REAL NOT NULL DEFAULT 0.0,\n          feelslike REAL NOT NULL DEFAULT 0.0,\n          dewpoint REAL DEFAULT 0.0,\n          windbearing INTEGER DEFAULT 0,\n          windspeed REAL DEFAULT 0.0,\n          windgust REAL DEFAULT 0.0,\n          humidity REAL DEFAULT 0.0,\n          visibility REAL DEFAULT 0.0,\n          pressure REAL DEFAULT 1013.0,\n          precip_probability REAL DEFAULT 0.0,\n          precip_intensity REAL DEFAULT 0.0,\n          precip_type TEXT DEFAULT 'none',\n          cloudCover REAL DEFAULT 0.0,\n          cloudBase REAL DEFAULT 0.0,\n          cloudCeiling REAL DEFAULT 0.0,\n          moonPhase INTEGER DEFAULT 0,\n          uvindex INTEGER DEFAULT 0,\n          sunrise INTEGER DEFAULT 0,\n          sunset INTEGER DEFAULT 0,\n          tempMax REAL DEFAULT 0.0,\n          tempMin REAL DEFAULT 0.0\n      )\n    )\";\n\n    rc = sqlite3_exec(the_db, sql, utils::sqlite_callback, 0, &err);\n    if(rc != SQLITE_OK) {\n        LOG_F(INFO, \"DB error when creating the table: %s\", err);\n        sqlite3_free(err);\n    }\n\n    rc = sqlite3_prepare_v2(the_db,\n                            \"INSERT INTO history(timestamp, summary, icon, temperature,\"\n                            \"feelslike, dewpoint, windbearing, windspeed,\"\n                            \"windgust, humidity, visibility, pressure,\"\n                            \"precip_probability, precip_intensity, precip_type,\"\n                            \"uvindex, sunrise, sunset, cloudBase, cloudCover, cloudCeiling, moonPhase,\"\n                            \"tempMin, tempMax)\"\n                            \"VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", -1, &stmt, 0);\n\n    if(SQLITE_OK == rc) {\n        char    tmp[10];\n        LOG_F(INFO, \"DataHandler::writeToDB(): sqlite3_prepare_v2() succeeded. Statement compiled\");\n        sqlite3_bind_int(stmt, 1, static_cast<int>(d.timeRecorded));\n        sqlite3_bind_text(stmt, 2, d.conditionAsString, -1, 0);\n        tmp[0] = d.weatherSymbol;\n        sqlite3_bind_text(stmt, 3, tmp, -1, 0);\n        sqlite3_bind_double(stmt, 4, d.temperature);\n        sqlite3_bind_double(stmt, 5, d.temperatureApparent);\n        sqlite3_bind_double(stmt, 6, d.dewPoint);\n        sqlite3_bind_int(stmt, 7, d.windDirection);\n        sqlite3_bind_double(stmt, 8, d.windSpeed);\n        sqlite3_bind_double(stmt, 9, d.windGust);\n        sqlite3_bind_double(stmt, 10, d.humidity);\n        sqlite3_bind_double(stmt, 11, d.visibility);\n        sqlite3_bind_double(stmt, 12, d.pressureSeaLevel);\n        sqlite3_bind_double(stmt, 13, d.precipitationProbability);\n        sqlite3_bind_double(stmt, 14, d.precipitationIntensity);\n        sqlite3_bind_text(stmt, 15, d.precipitationTypeAsString, -1, 0);\n        sqlite3_bind_int(stmt, 16, static_cast<int>(d.uvIndex));\n        sqlite3_bind_int(stmt, 17, static_cast<int>(d.sunriseTime));\n        sqlite3_bind_int(stmt, 18, static_cast<int>(d.sunsetTime));\n        sqlite3_bind_double(stmt, 19, d.cloudBase);\n        sqlite3_bind_double(stmt, 20, d.cloudCover);\n        sqlite3_bind_double(stmt, 21, d.cloudCeiling);\n        sqlite3_bind_int(stmt, 22, d.moonPhase);\n        sqlite3_bind_double(stmt, 23, d.temperatureMin);\n        sqlite3_bind_double(stmt, 24, d.temperatureMax);\n\n        rc = sqlite3_step(stmt);\n        if(SQLITE_OK == rc) {\n            LOG_F(INFO, \"DataHandler::writeToDB(): sqlite3_step() succeeded. Insert done.\");\n            sqlite3_finalize(stmt);\n        } else {\n            LOG_F(INFO, \"DataHandler::writeToDB(): sqlite3_step error: %s\", sqlite3_errmsg(the_db));\n            sqlite3_finalize(stmt);\n        }\n\n    }\n    else {\n        LOG_F(INFO, \"DataHandler::writeToDB(): prepare stmt, error: %s\", sqlite3_errmsg(the_db));\n    }\n    sqlite3_close(the_db);\n}\n\n/**\n * This performs all the work.\n * returns 0 if everything ok, -1 otherwise (used as exit code in main())\n *\n * @author alex (25.02.21)\n */\nint DataHandler::run()\n{\n    const CFG& cfg = m_options.getConfig();\n\n    if(cfg.offline) {\n        LOG_F(INFO, \"DataHandler::run(): Attempting to read from cache (--offline option present)\");\n        if(!this->readFromCache()) {\n            LOG_F(INFO, \"run() Reading from cache failed, giving up.\");\n            return -1;\n        }\n    } else {\n        LOG_F(INFO, \"DataHandler::run(): --offline not specified, attemptingn to fetch from API\");\n        if(this->readFromApi() == false) {\n            if(!cfg.skipcache) {\n                LOG_F(INFO, \"DataHandler::run(): readFromApi() failed, trying cache\");\n                if(this->readFromCache() == false) {\n                    LOG_F(INFO, \"DataHandler::run(): BOTH readFromApi() and readFromCache() failed, giving up...\");\n                    return -1;\n                }\n            } else {\n                LOG_F(INFO, \"DataHandler::run(): readFromApi() failed, cache opted-out, giving up...\");\n                return -1;\n            }\n        }\n    }\n    if(!cfg.debug) {\n        LOG_F(INFO, \"run() - valid data, beginning output\");\n        if(!cfg.silent) {\n            this->doOutput(stdout);\n        }\n        // dump to a file if --output was given\n        if(cfg.output_file.length() > 0) {\n            FileDumper dumper(this);\n            dumper.dump();\n        }\n        return 0;\n    } else {\n        LOG_F(INFO, \"run() - valid data, debug mode, no output genereated\");\n    }\n    return -1;\n}\n",
			"file": "src/DataHandler.cpp",
			"file_size": 15175,
			"file_write_time": 132990730468107614,
			"settings":
			{
				"buffer_size": 15171,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"transpose",
					null,
					"AgAAAJ0CAAAAAAAAngIAAAAAAAABAAAACpwCAAAAAAAAnQIAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAnQIAAAAAAACdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAJ0CAAAAAAAAnQIAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": " ____________________________________________________________________________\n/ I'll give you my opinion of the human race in a nutshell ... their heart's \\\n| in the right place, but their head is a thoroughly inefficient organ.      |\n|                                                                            |\n\\ -- W. Somerset Maugham, \"The Summing Up\"                                   /\n ----------------------------------------------------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n[15:09:35::alex@warpcore:code/fetchweather]$>                                                                                    \n[15:09:45::alex@warpcore:code/fetchweather]$>dir                                                                                 \ntotal 192\ndrwxrwxr-x 11 alex alex  4096 14. Feb 06:35 .\ndrwxr-xr-x 25 alex alex  4096 25. Mär 10:52 ..\ndrwxr-xr-x  4 alex alex  4096 17. Mär 03:26 build\ndrwxr-x---  3 alex alex  4096 14. Feb 06:35 .cache\ndrwxrwxr-x  4 alex alex  4096 10. Dez 10:55 cmake-build-debug-clang\ndrwxrwxr-x  6 alex alex  4096 24. Feb 18:09 cmake-build-release-clang\n-rw-rw-r--  1 alex alex  2845  1. Dez 04:28 CMakeLists.txt\n-rw-r--r--  1 alex alex 22061  3. Dez 05:00 CMakeLists.txt.user\n-rw-rw-r--  1 alex alex 11403  1. Dez 04:18 compile_commands.json\n-rw-------  1 alex alex    80 13. Feb 12:47 fetchweather.kdev4\n-rw-rw-r--  1 alex alex   212 28. Okt 04:48 fetchweather.sublime-project\n-rw-rw-r--  1 alex alex 52734 30. Mär 14:25 fetchweather.sublime-workspace\ndrwxrwxr-x  8 alex alex  4096 17. Mär 03:26 .git\n-rw-rw-r--  1 alex alex    68 26. Okt 02:37 .gitignore\ndrwxrwxr-x  6 alex alex  4096  2. Mär 2021  .idea\ndrwxr-xr-x  2 alex alex  4096 20. Feb 05:37 .kdev4\n-rw-rw-r--  1 alex alex  1065  2. Mär 2021  LICENSE\n-rw-rw-r--  1 alex alex  1791  4. Mär 2021  README.md\ndrwxrwxr-x  5 alex alex  4096  9. Mär 00:46 src\n-rw-rw-r--  1 alex alex 32997 11. Nov 06:54 untitled.sublime-workspace\ndrwxrwxr-x  2 alex alex  4096 20. Feb 06:20 .vscode\n[18:00:59::alex@warpcore:code/fetchweather]$>\n _______________________________________________________________________\n/ To converse at the distance of the Indes by means of sympathetic      \\\n| contrivances may be as natural to future times as to us is a literary |\n| correspondence.                                                       |\n|                                                                       |\n\\ -- Joseph Glanvill, 1661                                              /\n -----------------------------------------------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n[4:33:23::alex@warpcore:code/fetchweather]$>\n _________________________________\n/ MATH AND ALCOHOL DON'T MIX!     \\\n|                                 |\n| Please, don't drink and derive. |\n|                                 |\n| Mathematicians                  |\n|                                 |\n| Against                         |\n|                                 |\n| Drunk                           |\n|                                 |\n\\ Deriving                        /\n ---------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n[1:54:03::alex@warpcore:code/fetchweather]$>\n _______________________________________________________\n/ \"In matrimony, to hesitate is sometimes to be saved.\" \\\n|                                                       |\n\\ -- Butler                                             /\n -------------------------------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n[2:11:47::alex@warpcore:code/fetchweather]$>\n ____________________________________________________________________________\n/ I'm a lucky guy, and I'm happy to be with the Yankees. And I want to thank \\\n| everyone for making this night necessary.                                  |\n|                                                                            |\n\\ -- Yogi Berra at a dinner in his honor                                     /\n ----------------------------------------------------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n[16:34:55::alex@warpcore:code/fetchweather]$>",
			"settings":
			{
				"buffer_size": 4539,
				"line_ending": "Unix",
				"name": "ZSH",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"upgr",
				"Package Control: Upgrade Package"
			],
			[
				"terminus de",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"upgrad",
				"Package Control: Upgrade Package"
			],
			[
				"up",
				"Package Control: Upgrade Package"
			],
			[
				"upg",
				"Package Control: Upgrade Package"
			],
			[
				"sati",
				"Package Control: Satisfy Dependencies"
			],
			[
				"terminus op",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"lsp for",
				"LSP: Format File"
			],
			[
				"terminus theme",
				"Terminus Utilities: Generate User Theme"
			],
			[
				"terminus o",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"lsp sym",
				"LSP: Goto Symbol In Project"
			],
			[
				"sni",
				"Snippet: cquoted"
			],
			[
				"Snippet: cq",
				"Snippet: cquoted"
			],
			[
				"Snippet: sq",
				"Snippet: cquoted"
			],
			[
				"",
				"UI: Customize Color Scheme"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"terminus ope",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"FAVOR",
				"Favorites: Toggle Visibility"
			],
			[
				"goto",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"lsp",
				"LSP: Goto Symbol In Project"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"terminus",
				"Preferences: Terminus Settings"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"enable pa",
				"Package Control: Enable Package"
			],
			[
				"rremove ",
				"Package Control: Remove Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"terminus open",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package control install",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Upgrade Package"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"terminus the",
				"Terminus Utilities: Select Theme"
			],
			[
				"termi",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"termin",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"auto",
				"Auto Wrap: Toggle"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"packagere",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packageer",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packageres",
				"PackageResourceViewer: Open Resource"
			],
			[
				"dict",
				"View: Toggle Distraction Free"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"packaged",
				"PackageDev: Edit Current Color Scheme"
			],
			[
				"cont",
				"Package Control: Install Package"
			],
			[
				"control",
				"Package Control: Remove Package"
			],
			[
				"dkit",
				"DKit: Restart DCD Autocompletion Server"
			],
			[
				"contr",
				"Package Control: Remove Package"
			],
			[
				"contro",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Preferences: Browse Packages"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 309.0,
		"history":
		[
			"view.clear_undo_stack()",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(true)",
			"sublime.logCommands(true)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/mnt/shared/data/code/fetchweather",
		"/mnt/shared/data/code/fetchweather/src"
	],
	"file_history":
	[
		"/mnt/shared/data/code/fetchweather/src/DataHandler.cpp",
		"/mnt/shared/data/code/fetchweather/src/options.cpp",
		"/home/alex/.config/autostart/org.gnome.Evolution-alarm-notify.desktop",
		"/etc/dovecot/dovecot.conf",
		"/home/alex/.config/neomutt/neomuttrc",
		"/home/alex/.config/autostart/geoclue-demo-agent.desktop",
		"/home/alex/.local/share/dbus-1/services/org.gnome.OnlineAccounts.service",
		"/home/alex/.local/share/dbus-1/services/org.gnome.Identity.service",
		"/data/mnt/shared/data/code/weechat/build/config.h",
		"/home/alex/.thunderbird/cvkasgqm.default/chrome/userChrome.css",
		"/home/alex/.thunderbird/__BBB/chrome/global/addons/lightning/lightning.css",
		"/home/alex/Mail/rungetmail.sh",
		"/home/alex/.local/bin/getmail",
		"/home/alex/.config/getmail/getmailrc",
		"/home/alex/.config/getmail/oldmail-imap.gmail.com-993-silvercircle@gmail.com-[Gmail].All Mail",
		"/home/alex/restartall.sh",
		"/home/alex/.config/Kvantum/MateriaDark#/MateriaDark#.kvconfig",
		"/home/alex/.config/plasma-localerc",
		"/home/alex/.config/plasma-locale-settings.sh",
		"/home/alex/.config/plasma-workspace/env/qpa.sh",
		"/etc/leafnode/config",
		"/mnt/shared/data/code/fetchweather/src/main.cpp",
		"/home/alex/.local/share/applications/sublime_text.desktop",
		"/opt/Joplin/AppRun",
		"/home/alex/.local/share/applications/joplin.desktop",
		"/home/alex/.config/joplin-desktop/edit-a80cfedf95c6489a83ed58ffca4e60f1.md",
		"/home/alex/.local/share/applications/X3 Albion Prelude.desktop",
		"/home/alex/.local/share/applications/@joplinapp-desktop.desktop",
		"/spare/SteamLibrary/steamapps/common/Portal/portal/videoconfig_linux.cfg",
		"/etc/systemd/resolved.conf",
		"/home/alex/.local/share/applications/Scrivener.desktop",
		"/mnt/shared/data/code/fetchweather/src/DataHandler_ImplVC.cpp",
		"/home/alex/.mozilla/firefox/8b9yhi6l.default/chrome/userChrome.css",
		"/usr/include/qt5/QtCore/qcoreapplication.h",
		"/home/alex/.config/mpv/mpv.conf",
		"/home/alex/.mozilla/firefox/Test Profile/chrome/userChrome.css",
		"/mnt/shared/data/code/fetchweather/src/DataHandler_ImplClimaCell.cpp",
		"/mnt/shared/data/code/fetchweather/src/FileDumper.cpp",
		"/mnt/shared/data/code/fetchweather/src/DataHandler.h",
		"/mnt/shared/data/code/fetchweather/src/DataHandler_ImplOWM.cpp",
		"/mnt/shared/data/code/fetchweather/src/FetchWeatherApp.cpp",
		"/mnt/shared/data/code/fetchweather/CMakeLists.txt",
		"/tmp/crontab.RzXpAR",
		"/tmp/crontab.CRj2Rq",
		"/tmp/crontab.Lwblxt",
		"/tmp/crontab.5JeFLc",
		"/UBUNTU/HOME/mnt/shared/data/code/fetchweather/src/main.cpp",
		"/mnt/shared/data/code/fetchweather/src/FetchWeatherApp.h",
		"/home/mnt/shared/data/code/fetchweather/src/options.h",
		"/home/mnt/shared/data/code/fetchweather/src/FetchWeatherApp.cpp",
		"/mnt/shared/data/code/fetchweather/src/utils.cpp",
		"/home/alex/Dropbox/Docs/scratchpad.md",
		"/mnt/shared/data/code/fetchweather/src/DataHandler_ImplClimaCell.h",
		"/home/mnt/shared/data/code/fetchweather/src/DataHandler.h",
		"/home/alex/.config/sublime-text-3/Packages/User/Terminus.hidden-color-scheme",
		"/home/mnt/shared/data/code/fetchweather/src/FileDumper.cpp",
		"/tmp/mc-alex/extfsU1K8B1DefaultDark.sublime-theme",
		"/mnt/shared/data/code/fetchweather/compile_commands.json",
		"/mnt/shared/data/code/fetchweather/src/DataHandler_ImplOWM.h",
		"/seagate/volatile/.cache/sublime-text-3/Cache/Favorites/Favorites",
		"/home/mnt/shared/data/code/fetchweather/src/DataHandler.cpp",
		"/mnt/shared/data/code/fetchweather/src/CLI/StringTools.hpp",
		"/mnt/shared/data/code/fetchweather/src/loguru/loguru.cpp",
		"/mnt/shared/data/code/fetchweather/src/loguru/loguru.hpp",
		"/mnt/shared/data/code/fetchweather/src/CLI/Validators.hpp",
		"/mnt/shared/data/code/fetchweather/src/CLI/Version.hpp",
		"/mnt/shared/data/code/fetchweather/src/CLI/CLI.hpp",
		"/mnt/shared/data/code/fetchweather/src/CLI/Config.hpp",
		"/mnt/shared/data/code/fetchweather/src/CLI/Formatter.hpp",
		"/mnt/shared/data/code/fetchweather/src/CLI/App.hpp",
		"/home/mnt/shared/data/code/fetchweather/src/CLI/App.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/adl_serializer.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/detail/json_ref.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/detail/macro_unscope.hpp",
		"/home/alex/Dropbox/SUBLIME TEXT/4121/Linux exes/simple/READ",
		"/home/alex/Dropbox/SUBLIME TEXT/4121/Linux exes/simple/License",
		"/usr/include/c++/10/bits/stringfwd.h",
		"/usr/include/x86_64-linux-gnu/qt5/QtCore/qcoreapplication.h",
		"/home/mnt/shared/data/code/fetchweather/src/nlohmann/json_fwd.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/json.hpp",
		"/mnt/shared/data/code/fetchweather/src/FileDumper.h",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/json_fwd.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/ordered_map.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/byte_container_with_subtype.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/thirdparty/hedley/hedley.hpp",
		"/mnt/shared/data/code/fetchweather/src/nlohmann/thirdparty/hedley/hedley_undef.hpp",
		"/mnt/shared/data/code/fetchweather/fetchweather.sublime-project",
		"/home/mnt/shared/data/code/fetchweather/src/DataHandler_ImplOWM.cpp",
		"/home/alex/.config/sublime-text-3/Packages/MyBookmarks/sublimebookmark.py",
		"/home/alex/.config/sublime-text-3/Packages/User/nagremove.py",
		"/home/alex/.config/sublime-text-3/Packages/MyBookmarks/common.py",
		"/mnt/shared/data/code/fetchweather/src/utils.h",
		"/opt/sublime_text/sublime_text.desktop",
		"/opt/st4/sublime_text.desktop",
		"/mnt/shared/data/testpage/_posts/de/2021-08-13-klimawandel.md",
		"/usr/include/x86_64-linux-gnu/qt5/QtCore/qstring.h",
		"/usr/include/c++/10/bits/fs_dir.h",
		"/home/alex/.config/sublime-text-3/Packages/MyBookmarks/Commands.sublime-commands",
		"/home/alex/.config/sublime-text-3/Packages/User/Default.sublime-keymap",
		"/mnt/shared/data/code/fetchweather/src/options.h",
		"/home/alex/.config/sublime-text-3/Packages/MySublimeBookmarks/sublimebookmark.py",
		"/usr/include/c++/10/bits/fs_path.h",
		"/home/mnt/shared/data/code/fetchweather/src/main.cpp",
		"/home/mnt/shared/data/code/fetchweather/src/options.cpp",
		"/usr/include/c++/10/bits/fs_ops.h",
		"/home/mnt/shared/data/code/fetchweather/.gitignore",
		"/home/alex/.config/sublime-text-3/Packages/User/favorite_files_list.json",
		"/home/mnt/shared/data/code/fetchweather/foo",
		"/home/mnt/shared/data/code/fetchweather/fetchweather.sublime-project",
		"/home/mnt/shared/data/code/fetchweather/compile_commands.json",
		"/home/mnt/shared/data/code/fetchweather/src/utils.h",
		"/home/mnt/shared/data/code/fetchweather/src/DataHandler_ImplClimaCell.cpp",
		"/home/mnt/shared/data/code/fetchweather/src/utils.cpp",
		"/home/mnt/shared/data/code/fetchweather/src/DataHandler_ImplOWM.h",
		"/home/mnt/shared/data/code/fetchweather/src/DataHandler_ImplVC.cpp",
		"/home/mnt/shared/data/code/fetchweather/src/nlohmann/json.hpp",
		"/home/mnt/shared/data/code/fetchweather/CMakeLists.txt",
		"/home/mnt/shared/data/code/fetchweather/README.md",
		"/home/mnt/shared/data/testpage/_data/logos.yaml",
		"/home/mnt/shared/data/testpage/_config.yml",
		"/opt/sublime_merge/sublime_merge_serial.txt",
		"/home/alex/Downloads/sublime_merge_path.sh",
		"/home/alex/.local/share/applications/sublime_merge.desktop",
		"/mnt/shared/data/testpage/_posts/de/2021-10-07-bastinator.md",
		"/mnt/shared/data/testpage/_sass/content.scss",
		"/mnt/shared/data/testpage/subspace.sublime-project",
		"/mnt/shared/data/testpage/_plugins/img.rb",
		"/home/alex/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 108.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"populate",
			"mailboxes",
			"user",
			"complete",
			"toolbar",
			"task",
			"mini-day",
			"day",
			"toolbar",
			"event",
			"splitter",
			"task",
			"mini-day",
			"miniday",
			"mini",
			"tab",
			"ProgramOptions",
			"argc",
			"opt",
			"ProgramOptions",
			"argc",
			"dani",
			"goto",
			"sqlite3_bind_double",
			"SQLite",
			"sqlite",
			"db_path",
			"sqlite3_open",
			"sqlite3_bind_double"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/DataHandler_ImplOWM.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11116,
						"regions":
						{
						},
						"selection":
						[
							[
								3606,
								3606
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": false,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"bs_sintax": "c++",
							"buffer_scroll_name": "0500dcb7",
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 48,
							"lsp_uri": "file:///mnt/shared/data/code/fetchweather/src/DataHandler_ImplOWM.cpp",
							"remote_loading": false,
							"show_definitions": false,
							"spell_check": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1263.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/DataHandler_ImplVC.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1407,
						"regions":
						{
						},
						"selection":
						[
							[
								342,
								342
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"bs_sintax": "c++",
							"buffer_scroll_name": "831723cc",
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 14,
							"lsp_uri": "file:///mnt/shared/data/code/fetchweather/src/DataHandler_ImplVC.cpp",
							"remote_loading": false,
							"show_definitions": false,
							"spell_check": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/DataHandler_ImplClimaCell.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15912,
						"regions":
						{
						},
						"selection":
						[
							[
								8945,
								8945
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"bs_sintax": "c++",
							"buffer_scroll_name": "28d6d459",
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///mnt/shared/data/code/fetchweather/src/DataHandler_ImplClimaCell.cpp",
							"remote_loading": false,
							"show_definitions": false,
							"spell_check": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3243.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/data/mnt/shared/data/code/fetchweather/src/DataHandler_ImplClimaCell.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15912,
						"regions":
						{
						},
						"selection":
						[
							[
								8251,
								8251
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"bs_sintax": "c++",
							"buffer_scroll_name": "c08b8d58",
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///data/mnt/shared/data/code/fetchweather/src/DataHandler_ImplClimaCell.cpp",
							"remote_loading": false,
							"show_definitions": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2715.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/utils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4464,
						"regions":
						{
						},
						"selection":
						[
							[
								2507,
								2507
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"bs_sintax": "c++",
							"buffer_scroll_name": "1d1ab7db",
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 15,
							"lsp_uri": "file:///mnt/shared/data/code/fetchweather/src/utils.cpp",
							"remote_loading": false,
							"show_definitions": false,
							"spell_check": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/options.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4024,
						"regions":
						{
						},
						"selection":
						[
							[
								552,
								552
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"bs_sintax": "c++",
							"buffer_scroll_name": "6284986d",
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///mnt/shared/data/code/fetchweather/src/options.h",
							"remote_loading": false,
							"show_definitions": false,
							"spell_check": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/DataHandler.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15171,
						"regions":
						{
						},
						"selection":
						[
							[
								14183,
								14183
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"bs_sintax": "c++",
							"buffer_scroll_name": "e0e8d145",
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///mnt/shared/data/code/fetchweather/src/DataHandler.cpp",
							"remote_loading": false,
							"show_definitions": false,
							"spell_check": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5101.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 7,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4539,
						"regions":
						{
						},
						"selection":
						[
							[
								4539,
								4539
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"bs_sintax": "plain text",
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"incomplete_sync": null,
							"is_widget": true,
							"lsp_uri": "buffer://sublime/51",
							"result_base_dir": "/mnt/shared/data/code/fetchweather",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								80,
								100,
								120,
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 8,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"zsh",
									"-i",
									"-l"
								],
								"cwd": "/mnt/shared/data/code/fetchweather",
								"default_title": "ZSH",
								"env":
								{
									"LANG": "en_US.UTF-8",
									"TERM": "linux",
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": false,
							"terminus_view.panel_name": null,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 1264.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 1264.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.787959686697,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 210.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.language servers":
	{
		"height": 260.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.references":
	{
		"height": 271.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fetchweather.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main",
				"src/main.cpp"
			],
			[
				"data",
				"src/DataHandler.cpp"
			],
			[
				"hand",
				"src/DataHandler_ImplOWM.cpp"
			],
			[
				"file",
				"src/FileDumper.cpp"
			],
			[
				"",
				"compile_commands.json"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"opt",
				"src/options.cpp"
			],
			[
				".h",
				"src/nlohmann/json.hpp"
			],
			[
				"handler",
				"src/DataHandler_ImplOWM.cpp"
			],
			[
				"utils",
				"src/utils.cpp"
			],
			[
				"fetch",
				"src/FetchWeatherApp.cpp"
			],
			[
				"custom",
				"_sass/customizations.scss"
			],
			[
				"img.",
				"_plugins/img.rb"
			],
			[
				"klima",
				"_posts/de/2021-08-13-klimawandel.md"
			],
			[
				".rb",
				"_plugins/img.rb"
			],
			[
				"content",
				"_sass/content.scss"
			],
			[
				"paginator_bod",
				"_includes/paginator_body_head_min.html"
			],
			[
				"pagina",
				"_includes/paginator_body.html"
			],
			[
				"index.html",
				"blog/index.html"
			],
			[
				"cont",
				"_sass/content.scss"
			],
			[
				"kl",
				"_posts/de/2021-08-13-klimawandel.md"
			],
			[
				"wittz",
				"_posts/de/2021-10-21-bloede-witze-geloggt.md"
			],
			[
				"conte",
				"_sass/content.scss"
			],
			[
				"footersc",
				"assets/js/footerscripts.js"
			],
			[
				"content.",
				"_sass/content.scss"
			],
			[
				"footer_sc",
				"_includes/footer_scripts.html"
			],
			[
				"cust",
				"_sass/customizations.scss"
			],
			[
				"theme.sc",
				"_sass/theme.scss"
			],
			[
				"footers",
				"assets/js/footerscripts.js"
			],
			[
				"lunr",
				"_posts/en/2021-09-01-lunrjs-for-jekyll.md"
			],
			[
				"sear",
				"_help/searchhelp.md"
			],
			[
				"search",
				"search.html"
			],
			[
				"se",
				"search.html"
			],
			[
				"inde",
				"index.markdown"
			],
			[
				"sea",
				"search.html"
			],
			[
				"index.",
				"index.markdown"
			],
			[
				"theme-",
				"_sass/theme-light.scss"
			],
			[
				"comm",
				"_includes/comment_fragment.html"
			],
			[
				"defs",
				"_includes/defs.md"
			],
			[
				"defs.",
				"_includes/defs.md"
			],
			[
				"abou",
				"_help/about.markdown"
			],
			[
				"index",
				"index.markdown"
			],
			[
				"priv",
				"_help/privacy.md"
			],
			[
				"faq",
				"_help/sitefaq.md"
			],
			[
				"about",
				"_help/about.markdown"
			],
			[
				"_cn",
				"_config.yml"
			],
			[
				"p",
				"_help/privacy.md"
			],
			[
				"pri",
				"_help/privacy.md"
			],
			[
				"index.ma",
				"index.markdown"
			],
			[
				"site_hea",
				"_includes/site_header.html"
			],
			[
				"seac",
				"search.html"
			],
			[
				"_config",
				"_config.yml"
			],
			[
				"font-tisa",
				"_sass/font-ff-tisa.scss"
			],
			[
				"font-tis",
				"_sass/font-ff-tisa.scss"
			],
			[
				"searc",
				"assets/js/search.js"
			],
			[
				"search.js",
				"assets/js/search.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 613.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/mnt/shared/data/testpage/subspace.sublime-project"
			],
			[
				"sub",
				"/mnt/shared/data/testpage/subspace.sublime-project"
			]
		],
		"width": 698.0
	},
	"select_symbol":
	{
		"height": 132.0,
		"last_filter": "Program",
		"selected_items":
		[
			[
				"Program",
				"ProgramOptions"
			],
			[
				"Options",
				"Options"
			],
			[
				"curl",
				"curl_fetch"
			],
			[
				"fetch",
				"FetchWeatherApp"
			],
			[
				"data",
				"DataHandler"
			],
			[
				"curl_",
				"curl_fetch"
			],
			[
				"isoto",
				"ISOToUnixtime"
			],
			[
				"setapp",
				"setAppObject"
			],
			[
				"pro",
				"ProgramOptions"
			],
			[
				"content-separ",
				"hrcontent-separator.thin"
			],
			[
				"content-sep",
				"hrcontent-separator.thin"
			],
			[
				"video-padd",
				"divvideo-padded"
			],
			[
				"hide-on",
				"ulmarkdown-toc, .hide-on-small"
			],
			[
				"ytconta",
				"divytcontainer"
			],
			[
				"content-s",
				"hrcontent-separator.superthin"
			],
			[
				"c_pl",
				"c_pleft"
			],
			[
				"lunr",
				"lilunr-searchresult"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 406.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
